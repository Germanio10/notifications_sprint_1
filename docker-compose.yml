version: '3.8'

services:
  event_api:
    build:
      context: ./event_api
    env_file:
      - .env
    networks:
      - my_network
    depends_on:
      mongo_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mailhog:
        condition: service_started
    ports:
      - "8000:8000"
    expose:
      - 8000

  mongo_db:
    image: mongo
    env_file:
      - .env
    networks:
      - my_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 5s
    ports:
      - "27017:27017"

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    networks:
      - my_network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - my_network

  worker:
    build:
      context: ./worker
    image: worker-image
    env_file:
      - .env
    container_name: worker
    depends_on:
      mongo_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - my_network

  scheduler:
    build:
      context: ./scheduler
    image: notiication_scheduler_image
    env_file:
      - .env
    container_name: scheduler
    depends_on:
      mongo_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - my_network


networks:
  my_network:
    external: True
